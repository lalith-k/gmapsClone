{"version":3,"file":"polyline.es.mjs","sources":["../lib/lib/index.ts"],"sourcesContent":["import type { LineString, Position } from \"geojson\";\n\n// https://github.com/mapbox/polyline/blob/master/src/polyline.js\n\n// Based off of [the offical Google document](https://developers.google.com/maps/documentation/utilities/polylinealgorithm)\n//\n// Some parts from [this implementation](http://facstaff.unca.edu/mcmcclur/GoogleMaps/EncodePolyline/PolylineEncoder.js)\n// by [Mark McClure](http://facstaff.unca.edu/mcmcclur/)\n\nfunction py2_round(value: number) {\n  // Google's polyline algorithm uses the same rounding strategy as Python 2,\n  // which is different from JS for negative values\n  return Math.floor(Math.abs(value) + 0.5) * (value >= 0 ? 1 : -1);\n}\n\nfunction encodeNumber(current: number, previous: number, factor: number) {\n  current = py2_round(current * factor);\n  previous = py2_round(previous * factor);\n  let coordinate = current - previous;\n  coordinate <<= 1;\n  if (current - previous < 0) {\n    coordinate = ~coordinate;\n  }\n  let output = \"\";\n  while (coordinate >= 0x20) {\n    output += String.fromCharCode((0x20 | (coordinate & 0x1f)) + 63);\n    coordinate >>= 5;\n  }\n  output += String.fromCharCode(coordinate + 63);\n  return output;\n}\n\nfunction resultChange(result: number) {\n  return result & 1 ? ~(result >> 1) : result >> 1;\n}\n\n/**\n * Decodes any string into a [longitude, latitude] coordinates array.\n *\n * Any string is a valid polyline, but if you provide this\n * with an arbitrary string, it'll produce coordinates well\n * outside of the normal range.\n */\nexport function decode(str: string, precision: number = 5): Position[] {\n  const factor = Math.pow(10, precision);\n  let index = 0;\n  let lat = 0;\n  let lng = 0;\n  const coordinates = [];\n  let shift = 0;\n  let result = 0;\n  let byte = null;\n\n  let latitude_change: number;\n  let longitude_change: number;\n\n  // Coordinates have variable length when encoded, so just keep\n  // track of whether we've hit the end of the string. In each\n  // loop iteration, a single coordinate is decoded.\n  while (index < str.length) {\n    // Reset shift, result, and byte\n    byte = null;\n    shift = 0;\n    result = 0;\n\n    do {\n      byte = str.charCodeAt(index++) - 63;\n      result |= (byte & 0x1f) << shift;\n      shift += 5;\n    } while (byte >= 0x20);\n\n    latitude_change = resultChange(result);\n\n    shift = result = 0;\n\n    do {\n      byte = str.charCodeAt(index++) - 63;\n      result |= (byte & 0x1f) << shift;\n      shift += 5;\n    } while (byte >= 0x20);\n\n    longitude_change = resultChange(result);\n\n    lat += latitude_change;\n    lng += longitude_change;\n\n    coordinates.push([lng / factor, lat / factor]);\n  }\n\n  return coordinates;\n}\n\n/**\n * Encodes the given [latitude, longitude] coordinates array.\n *\n * @param coordinates Coordinates, in longitude, latitude order\n * @returns encoded polyline\n */\nexport function encode(coordinates: number[][], precision: number = 5) {\n  if (!coordinates.length) {\n    return \"\";\n  }\n  const factor = Math.pow(10, precision);\n\n  let output =\n    encodeNumber(coordinates[0][1], 0, factor) +\n    encodeNumber(coordinates[0][0], 0, factor);\n\n  for (let i = 1; i < coordinates.length; i++) {\n    const a = coordinates[i];\n    const b = coordinates[i - 1];\n    output += encodeNumber(a[1], b[1], factor);\n    output += encodeNumber(a[0], b[0], factor);\n  }\n\n  return output;\n}\n\n/**\n * Encodes a GeoJSON LineString feature/geometry.\n *\n * @param geojson A LineString\n */\nexport function geoJSONToPolyline(geojson: LineString, precision: number = 5) {\n  return encode(geojson.coordinates, precision);\n}\n\n/**\n * Decodes to a GeoJSON LineString geometry.\n *\n * @param str An encoded polyline as a string.\n */\nexport function polylineToGeoJSON(str: string, precision: number = 5): LineString {\n  const coords = decode(str, precision);\n  return {\n    type: \"LineString\",\n    coordinates: coords,\n  };\n}\n"],"names":[],"mappings":"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"}